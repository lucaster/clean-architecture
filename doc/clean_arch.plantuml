@startuml clean_arch
hide empty members

package CQRS {
  class Command<P>
  class Query<P>
  class Event<P>
  class Outcome<P>
  class Result<P>
  Command <-- Outcome
  Query <-- Result

  legend
  P can be Void
  endlegend
}

package "Clean Architecture" {
  abstract class Request<P> {
    {abstract} getPayload(): P
  }
  abstract class Response<P> {
    {abstract} getPayload(): P
  }
  note bottom of Request : P can be Void
  note bottom of Response : P can be Void
  interface UseCase<I: Request<A>, O: Response<B>> {
    {abstract} +handle(I): Try<O>
  }
  abstract class UseCaseTemplate<I, O> {
    handle(I): O
    {abstract} #validateRequest(I)
    {abstract} #validateBusiness(I)
    {abstract} #work(I): Try<O>
  }
  ' note bottom of UseCaseTemplate : handle() uses Try pattern
  UseCase <|-- UseCaseTemplate

  Request .[dotted]right.> UseCase
  UseCase .[dotted]right.> Response
}
package Monads {
  abstract class Try<T>
}

@enduml
